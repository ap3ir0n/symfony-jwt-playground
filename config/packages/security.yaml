security:
    encoders:
        Symfony\Component\Security\Core\User\User: 'bcrypt'

    providers:
        backend_users:
            memory:
                users: # password is 'sicura'
                    john_admin: { password: '$2y$13$Bd5KNBjm/Zh2ccNyQPIoNef9F3ifuiD3NoQ8Nyj5YFvnUPnmtKkhS', roles: ['ROLE_ADMIN'] }
                    jane_admin: { password: '$2y$13$Bd5KNBjm/Zh2ccNyQPIoNef9F3ifuiD3NoQ8Nyj5YFvnUPnmtKkhS', roles: ['ROLE_ADMIN', 'ROLE_SUPER_ADMIN'] }

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        api_login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            json_login:
                check_path:               /api/login
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure

        web_login:
            pattern:  ^/web/login
            anonymous: true
            stateless: true
            form_login:
                check_path:               /web/login
                username_parameter:       username
                password_parameter:       password
                success_handler:          App\Security\AuthenticationSuccessHandler
                failure_path:             web_login_check

        secured_api:
            pattern:   ^/api/secured
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        secured_web:
            pattern:   ^/web/secured
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

    access_control:
        - { path: ^/api/login,      roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api,            roles: IS_AUTHENTICATED_FULLY }